server:
  address: 0.0.0.0
  servlet:
    encoding:
      charset: utf-8
      force: true
  port: 8080
  domain: ${SERVER_DOMAIN:http://localhost:8080}

# 로그 레벨 설정
logging:
  level:
    root: INFO                 # 모든 라이브러리는 INFO 이상 출력
    com.chakak: DEBUG            # 내 프로젝트는 DEBUG 이상 모두 출력
    org.hibernate.SQL: debug    # Hibernate 실행 쿼리 출력
    org.hibernate.type.descriptor.sql: trace  # 쿼리 파라미터 값 출력

# 카카오페이 설정 (환경변수 사용)
kakao:
  pay:
    secret-key: ${KAKAO_PAY_SECRET_KEY}
    cid: ${KAKAO_PAY_CID:TC0ONETIME}  # 기본값: 테스트용 CID
    api-url: ${KAKAO_PAY_API_URL:https://open-api.kakaopay.com}
  api:
    client-id: ${KAKAO_CLIENT_ID}
    redirect-uri: http://localhost:8080/api/auth/kakao/callback
    token-uri: https://kauth.kakao.com/oauth/token
    user-info-uri: https://kapi.kakao.com/v2/user/me

# 파일 업로드 설정
file:
  upload:
    path: ./uploads/portfolios  # 상대 경로로 변경 (프로젝트 루트 기준)
    base-url: http://localhost:8080  # 서버 URL (배포 시 실제 도메인으로 변경)

spring:
  # Spring 파일 업로드 제한 설정
  servlet:
    multipart:
      max-file-size: 50MB  # Base64 이미지는 크기가 클 수 있음
      max-request-size: 100MB

  config:
    import: optional:application-secret.yml

  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: chakak
    password: chakak1234

  # H2 데이터베이스 웹 콘솔 활성화 (개발용)
  h2:
    console:
      settings:
        web-allow-others: true

#  sql:
#     init:
#       mode: always
#       data-locations:
#         - classpath:db/data.sql

  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true                # SQL 예쁘게 출력
        default_batch_fetch_size: 10
    defer-datasource-initialization: true

  mail:
    host: smtp.gmail.com
    port: 587
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true


